---
version: 2.1

orbs:
  slack: circleci/slack@3.4.2

jobs:
  build:
    docker:
      - image: circleci/ruby:2.7.1
        environment:
          RAILS_ENV: test
      - image: circleci/mysql:5.7
        environment:
          MYSQL_USER: db_username
          MYSQL_DATABASE: db_app_test
          MYSQL_PASSWORD: db_password
          MYSQL_ROOT_PASSWORD: $
    steps:
      - checkout
      # - restore_cache:
      #     name: Restore bundle cache
      #     keys:
      #       - app-{{ checksum "Gemfile.lock" }}

      # - run: gem install bundler:2.1.4

      # - run: bundle install --path vendor/bundle

      # - save_cache:
      #     name: Save bundle cache
      #     key: app-{{ checksum "Gemfile.lock" }}
      #     paths:
      #       - vendor/bundle

      # - run: dockerize -wait tcp://127.0.0.1:3306 -timeout 1m

      # - run: cp .env.example .env

      # - run: bundle exec rails db:prepare

      - run: echo $CIRCLE_PREVIOUS_BUILD_NUM
      - run: echo << pipeline.git.base_revision >>
      - run: echo << pipeline.git.revision >>

      - run: |
          if [ -z $CIRCLE_PULL_REQUEST ] || [ $CIRCLE_PREVIOUS_BUILD_NUM ]; then
            circleci-agent step halt
          fi

      - slack/notify:
          color: $SLACK_COLOR
          webhook: $SLACK_WEBHOOK
          channel: $SLACK_CHANNEL
          image_url: $SLACK_IMAGE
          mentions: $SLACK_REVIEW_MEMBERS
          include_project_field: false
          include_job_number_field: false
          include_visit_job_action: false
          message: |
            Pull request updated by \`$CIRCLE_USERNAME\` :star2:
            *<$CIRCLE_PULL_REQUEST|#${CIRCLE_PULL_REQUEST##*/} $(git log --format=%B -n 1 $CIRCLE_SHA1)>*
          footer: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME | << pipeline.git.branch >>

workflows:
  version: 2
  build:
    jobs:
      - build
